#!/usr/bin/env bash

set -x
set -e

APP_NAME="dummy_app"


ROOT_DIR=`pwd`
TEST_DATA_DIR=${ROOT_DIR}/testdata

mkdir -p _test_client_data
pushd _test_client_data

# Collect data

[ -e vk.json ] || cp ${TEST_DATA_DIR}/dummy_app/vk.json .
[ -e extproof1.json ] || cp ${TEST_DATA_DIR}/dummy_app/extproof1.json .
[ -e extproof2.json ] || cp ${TEST_DATA_DIR}/dummy_app/extproof2.json .
[ -e extproof3.json ] || cp ${TEST_DATA_DIR}/dummy_app/extproof3.json .
[ -e extproof4.json ] || cp ${TEST_DATA_DIR}/dummy_app/extproof4.json .

# Register the application

zecale register --key vk.json --name ${APP_NAME} || echo Already registered
( zecale register --key vk.json --name ${APP_NAME} ) && \
    (echo Expected duplicate registration to fail; exit 1)

pushd application_deployer
    [ -e vk.json ] || cp ${TEST_DATA_DIR}/dummy_app/vk.json .
    [ -e vk_hash ] || zecale nested-verification-key-hash vk.json > vk_hash
    [ -e zecale-instance ] || cp ../aggregator_deployer/zecale-instance .
    zecale_dummy_application deploy \
       `cat vk_hash` \
        --permitted-dispatcher-instance zecale-instance \
        --app-output-address app-address

zecale submit --name ${APP_NAME} --tx extproof1.json
zecale submit --name ${APP_NAME} --tx extproof2.json
zecale submit --name ${APP_NAME} --tx extproof3.json
zecale submit --name ${APP_NAME} --tx extproof4.json

# Request aggregate proofs. Assuming the server was empty at the beginning of
# the test, the first two request should succeed, and the third should fail.

pushd user1

    [ -e zecale-instance ] || cp ../aggregator_deployer/zecale-instance .
    [ -e app-vk.json ] || cp ${TEST_DATA_DIR}/dummy_app/vk.json app-vk.json
    [ -e vk-hash ] || cp ../application_deployer/vk-hash .
    [ -e app-instance ] || cp ../application_deployer/app-instance .

    # Submit transaction data to the aggregation server
    zecale submit --name ${APP_NAME} --tx  ${TEST_DATA_DIR}/dummy_app/extproof1.json
    zecale submit --name ${APP_NAME} --tx  ${TEST_DATA_DIR}/dummy_app/extproof2.json
    zecale submit --name ${APP_NAME} --tx  ${TEST_DATA_DIR}/dummy_app/extproof3.json
    zecale submit --name ${APP_NAME} --tx  ${TEST_DATA_DIR}/dummy_app/extproof4.json

    # Get a single batch and send to the contract
    zecale get-batch --name ${APP_NAME} --batch-file batch1.json
    zecale check-batch batch1.json --batch-size 2
    zecale submit-batch batch1.json --wait

    # get a second batch and send to the contract
    zecale get-batch --name ${APP_NAME} --batch-file batch2.json
    zecale check-batch batch1.json --batch-size 2
    zecale submit-batch batch2.json --wait

    # A third batch should be available
    zecale get-batch --name ${APP_NAME} --batch-file batch3.json && \
        (echo Expected failure when no batch available; exit 1)

popd # user1

popd # _test_client_data

set +e
set +x

echo "=================================================="
echo "==              Client Test Passed              =="
echo "=================================================="
