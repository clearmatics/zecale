#!/usr/bin/env python3

# Copyright (c) 2015-2020 Clearmatics Technologies Ltd
#
# SPDX-License-Identifier: LGPL-3.0+

from .defaults import AGGREGATOR_SERVER_ENDPOINT_DEFAULT
from commands.command_context import CommandContext
from commands.zecale_register import register
from click import command, group, option, pass_context, Context, ClickException
from click_default_group import DefaultGroup


@command()
@pass_context
def help(ctx: Context) -> None:
    """
    Print help and exit
    """
    # Note, this command seems redundant but ensures that an error is raised if
    # no subcommand is specified.
    assert(ctx.parent)
    print(ctx.parent.get_help())
    raise ClickException("no command specified")


@group(cls=DefaultGroup, default_if_no_args=True, default="help")
@option(
    "--aggregator-server", "-a",
    default=AGGREGATOR_SERVER_ENDPOINT_DEFAULT,
    help=f"Prover server endpoint (default={AGGREGATOR_SERVER_ENDPOINT_DEFAULT})")
@pass_context
def zecale(
        ctx: Context,
        aggregator_server: str) -> None:
    if ctx.invoked_subcommand == "help":
        ctx.invoke(help)
    ctx.obj = CommandContext(
        aggregator_server)


zecale.add_command(register)
zecale.add_command(help)


if __name__ == "__main__":
    zecale()  # pylint: disable=no-value-for-parameter
