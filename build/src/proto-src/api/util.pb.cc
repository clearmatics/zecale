// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/util.proto

#include "api/util.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_api_2futil_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ZethNote_api_2futil_2eproto;
namespace prover_proto {
class ZethNoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZethNote> _instance;
} _ZethNote_default_instance_;
class JoinsplitInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinsplitInput> _instance;
} _JoinsplitInput_default_instance_;
class HexPointBaseGroup1AffineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HexPointBaseGroup1Affine> _instance;
} _HexPointBaseGroup1Affine_default_instance_;
class HexPointBaseGroup2AffineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HexPointBaseGroup2Affine> _instance;
} _HexPointBaseGroup2Affine_default_instance_;
}  // namespace prover_proto
static void InitDefaultsZethNote_api_2futil_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_ZethNote_default_instance_;
    new (ptr) ::prover_proto::ZethNote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::ZethNote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZethNote_api_2futil_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZethNote_api_2futil_2eproto}, {}};

static void InitDefaultsJoinsplitInput_api_2futil_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_JoinsplitInput_default_instance_;
    new (ptr) ::prover_proto::JoinsplitInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::JoinsplitInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JoinsplitInput_api_2futil_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJoinsplitInput_api_2futil_2eproto}, {
      &scc_info_ZethNote_api_2futil_2eproto.base,}};

static void InitDefaultsHexPointBaseGroup1Affine_api_2futil_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_HexPointBaseGroup1Affine_default_instance_;
    new (ptr) ::prover_proto::HexPointBaseGroup1Affine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::HexPointBaseGroup1Affine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HexPointBaseGroup1Affine_api_2futil_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHexPointBaseGroup1Affine_api_2futil_2eproto}, {}};

static void InitDefaultsHexPointBaseGroup2Affine_api_2futil_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_HexPointBaseGroup2Affine_default_instance_;
    new (ptr) ::prover_proto::HexPointBaseGroup2Affine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::HexPointBaseGroup2Affine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HexPointBaseGroup2Affine_api_2futil_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHexPointBaseGroup2Affine_api_2futil_2eproto}, {}};

void InitDefaults_api_2futil_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ZethNote_api_2futil_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoinsplitInput_api_2futil_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HexPointBaseGroup1Affine_api_2futil_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HexPointBaseGroup2Affine_api_2futil_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_api_2futil_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_api_2futil_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_api_2futil_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_api_2futil_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ZethNote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ZethNote, apk_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ZethNote, value_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ZethNote, rho_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ZethNote, trap_r_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, merkle_path_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, address_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, note_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, spending_ask_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::JoinsplitInput, nullifier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup1Affine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup1Affine, x_coord_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup1Affine, y_coord_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup2Affine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup2Affine, x_c1_coord_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup2Affine, x_c0_coord_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup2Affine, y_c1_coord_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::HexPointBaseGroup2Affine, y_c0_coord_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prover_proto::ZethNote)},
  { 9, -1, sizeof(::prover_proto::JoinsplitInput)},
  { 19, -1, sizeof(::prover_proto::HexPointBaseGroup1Affine)},
  { 26, -1, sizeof(::prover_proto::HexPointBaseGroup2Affine)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_ZethNote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_JoinsplitInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_HexPointBaseGroup1Affine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_HexPointBaseGroup2Affine_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_api_2futil_2eproto = {
  {}, AddDescriptors_api_2futil_2eproto, "api/util.proto", schemas,
  file_default_instances, TableStruct_api_2futil_2eproto::offsets,
  file_level_metadata_api_2futil_2eproto, 4, file_level_enum_descriptors_api_2futil_2eproto, file_level_service_descriptors_api_2futil_2eproto,
};

const char descriptor_table_protodef_api_2futil_2eproto[] =
  "\n\016api/util.proto\022\014prover_proto\"C\n\010ZethNo"
  "te\022\013\n\003apk\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\013\n\003rho\030\003 "
  "\001(\t\022\016\n\006trap_r\030\004 \001(\t\"\205\001\n\016JoinsplitInput\022\023"
  "\n\013merkle_path\030\001 \003(\t\022\017\n\007address\030\002 \001(\003\022$\n\004"
  "note\030\003 \001(\0132\026.prover_proto.ZethNote\022\024\n\014sp"
  "ending_ask\030\004 \001(\t\022\021\n\tnullifier\030\005 \001(\t\"<\n\030H"
  "exPointBaseGroup1Affine\022\017\n\007x_coord\030\001 \001(\t"
  "\022\017\n\007y_coord\030\002 \001(\t\"j\n\030HexPointBaseGroup2A"
  "ffine\022\022\n\nx_c1_coord\030\001 \001(\t\022\022\n\nx_c0_coord\030"
  "\002 \001(\t\022\022\n\ny_c1_coord\030\003 \001(\t\022\022\n\ny_c0_coord\030"
  "\004 \001(\tb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_api_2futil_2eproto = {
  false, InitDefaults_api_2futil_2eproto, 
  descriptor_table_protodef_api_2futil_2eproto,
  "api/util.proto", &assign_descriptors_table_api_2futil_2eproto, 413,
};

void AddDescriptors_api_2futil_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_api_2futil_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_api_2futil_2eproto = []() { AddDescriptors_api_2futil_2eproto(); return true; }();
namespace prover_proto {

// ===================================================================

void ZethNote::InitAsDefaultInstance() {
}
class ZethNote::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZethNote::kApkFieldNumber;
const int ZethNote::kValueFieldNumber;
const int ZethNote::kRhoFieldNumber;
const int ZethNote::kTrapRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZethNote::ZethNote()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.ZethNote)
}
ZethNote::ZethNote(const ZethNote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apk().size() > 0) {
    apk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apk_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  rho_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rho().size() > 0) {
    rho_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rho_);
  }
  trap_r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trap_r().size() > 0) {
    trap_r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trap_r_);
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.ZethNote)
}

void ZethNote::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ZethNote_api_2futil_2eproto.base);
  apk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rho_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trap_r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ZethNote::~ZethNote() {
  // @@protoc_insertion_point(destructor:prover_proto.ZethNote)
  SharedDtor();
}

void ZethNote::SharedDtor() {
  apk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rho_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trap_r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZethNote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZethNote& ZethNote::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ZethNote_api_2futil_2eproto.base);
  return *internal_default_instance();
}


void ZethNote::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.ZethNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rho_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trap_r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ZethNote::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ZethNote*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string apk = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ZethNote.apk");
        object = msg->mutable_apk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ZethNote.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string rho = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ZethNote.rho");
        object = msg->mutable_rho();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string trap_r = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ZethNote.trap_r");
        object = msg->mutable_trap_r();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ZethNote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.ZethNote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apk()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apk().data(), static_cast<int>(this->apk().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ZethNote.apk"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ZethNote.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rho = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rho()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rho().data(), static_cast<int>(this->rho().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ZethNote.rho"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trap_r = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trap_r()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trap_r().data(), static_cast<int>(this->trap_r().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ZethNote.trap_r"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.ZethNote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.ZethNote)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ZethNote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.ZethNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apk = 1;
  if (this->apk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apk().data(), static_cast<int>(this->apk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.apk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apk(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // string rho = 3;
  if (this->rho().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rho().data(), static_cast<int>(this->rho().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.rho");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rho(), output);
  }

  // string trap_r = 4;
  if (this->trap_r().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trap_r().data(), static_cast<int>(this->trap_r().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.trap_r");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->trap_r(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.ZethNote)
}

::google::protobuf::uint8* ZethNote::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.ZethNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apk = 1;
  if (this->apk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apk().data(), static_cast<int>(this->apk().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.apk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apk(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // string rho = 3;
  if (this->rho().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rho().data(), static_cast<int>(this->rho().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.rho");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rho(), target);
  }

  // string trap_r = 4;
  if (this->trap_r().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trap_r().data(), static_cast<int>(this->trap_r().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ZethNote.trap_r");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->trap_r(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.ZethNote)
  return target;
}

size_t ZethNote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.ZethNote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string apk = 1;
  if (this->apk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apk());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string rho = 3;
  if (this->rho().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rho());
  }

  // string trap_r = 4;
  if (this->trap_r().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trap_r());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZethNote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.ZethNote)
  GOOGLE_DCHECK_NE(&from, this);
  const ZethNote* source =
      ::google::protobuf::DynamicCastToGenerated<ZethNote>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.ZethNote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.ZethNote)
    MergeFrom(*source);
  }
}

void ZethNote::MergeFrom(const ZethNote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.ZethNote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apk().size() > 0) {

    apk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apk_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.rho().size() > 0) {

    rho_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rho_);
  }
  if (from.trap_r().size() > 0) {

    trap_r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trap_r_);
  }
}

void ZethNote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.ZethNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZethNote::CopyFrom(const ZethNote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.ZethNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZethNote::IsInitialized() const {
  return true;
}

void ZethNote::Swap(ZethNote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZethNote::InternalSwap(ZethNote* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  apk_.Swap(&other->apk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rho_.Swap(&other->rho_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trap_r_.Swap(&other->trap_r_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ZethNote::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2futil_2eproto);
  return ::file_level_metadata_api_2futil_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JoinsplitInput::InitAsDefaultInstance() {
  ::prover_proto::_JoinsplitInput_default_instance_._instance.get_mutable()->note_ = const_cast< ::prover_proto::ZethNote*>(
      ::prover_proto::ZethNote::internal_default_instance());
}
class JoinsplitInput::HasBitSetters {
 public:
  static const ::prover_proto::ZethNote& note(const JoinsplitInput* msg);
};

const ::prover_proto::ZethNote&
JoinsplitInput::HasBitSetters::note(const JoinsplitInput* msg) {
  return *msg->note_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinsplitInput::kMerklePathFieldNumber;
const int JoinsplitInput::kAddressFieldNumber;
const int JoinsplitInput::kNoteFieldNumber;
const int JoinsplitInput::kSpendingAskFieldNumber;
const int JoinsplitInput::kNullifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinsplitInput::JoinsplitInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.JoinsplitInput)
}
JoinsplitInput::JoinsplitInput(const JoinsplitInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      merkle_path_(from.merkle_path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spending_ask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spending_ask().size() > 0) {
    spending_ask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spending_ask_);
  }
  nullifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nullifier().size() > 0) {
    nullifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nullifier_);
  }
  if (from.has_note()) {
    note_ = new ::prover_proto::ZethNote(*from.note_);
  } else {
    note_ = nullptr;
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:prover_proto.JoinsplitInput)
}

void JoinsplitInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_JoinsplitInput_api_2futil_2eproto.base);
  spending_ask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nullifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&note_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&note_)) + sizeof(address_));
}

JoinsplitInput::~JoinsplitInput() {
  // @@protoc_insertion_point(destructor:prover_proto.JoinsplitInput)
  SharedDtor();
}

void JoinsplitInput::SharedDtor() {
  spending_ask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nullifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete note_;
}

void JoinsplitInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinsplitInput& JoinsplitInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JoinsplitInput_api_2futil_2eproto.base);
  return *internal_default_instance();
}


void JoinsplitInput::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.JoinsplitInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  merkle_path_.Clear();
  spending_ask_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nullifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && note_ != nullptr) {
    delete note_;
  }
  note_ = nullptr;
  address_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JoinsplitInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JoinsplitInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string merkle_path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("prover_proto.JoinsplitInput.merkle_path");
          object = msg->add_merkle_path();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // int64 address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_address(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .prover_proto.ZethNote note = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::prover_proto::ZethNote::_InternalParse;
        object = msg->mutable_note();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string spending_ask = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.JoinsplitInput.spending_ask");
        object = msg->mutable_spending_ask();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string nullifier = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.JoinsplitInput.nullifier");
        object = msg->mutable_nullifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JoinsplitInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.JoinsplitInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string merkle_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_merkle_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->merkle_path(this->merkle_path_size() - 1).data(),
            static_cast<int>(this->merkle_path(this->merkle_path_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.JoinsplitInput.merkle_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .prover_proto.ZethNote note = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spending_ask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spending_ask()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spending_ask().data(), static_cast<int>(this->spending_ask().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.JoinsplitInput.spending_ask"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nullifier = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nullifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nullifier().data(), static_cast<int>(this->nullifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.JoinsplitInput.nullifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.JoinsplitInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.JoinsplitInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JoinsplitInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.JoinsplitInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string merkle_path = 1;
  for (int i = 0, n = this->merkle_path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->merkle_path(i).data(), static_cast<int>(this->merkle_path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.merkle_path");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->merkle_path(i), output);
  }

  // int64 address = 2;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->address(), output);
  }

  // .prover_proto.ZethNote note = 3;
  if (this->has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::note(this), output);
  }

  // string spending_ask = 4;
  if (this->spending_ask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spending_ask().data(), static_cast<int>(this->spending_ask().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.spending_ask");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->spending_ask(), output);
  }

  // string nullifier = 5;
  if (this->nullifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nullifier().data(), static_cast<int>(this->nullifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.nullifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nullifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.JoinsplitInput)
}

::google::protobuf::uint8* JoinsplitInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.JoinsplitInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string merkle_path = 1;
  for (int i = 0, n = this->merkle_path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->merkle_path(i).data(), static_cast<int>(this->merkle_path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.merkle_path");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->merkle_path(i), target);
  }

  // int64 address = 2;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->address(), target);
  }

  // .prover_proto.ZethNote note = 3;
  if (this->has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::note(this), target);
  }

  // string spending_ask = 4;
  if (this->spending_ask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spending_ask().data(), static_cast<int>(this->spending_ask().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.spending_ask");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->spending_ask(), target);
  }

  // string nullifier = 5;
  if (this->nullifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nullifier().data(), static_cast<int>(this->nullifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.JoinsplitInput.nullifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nullifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.JoinsplitInput)
  return target;
}

size_t JoinsplitInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.JoinsplitInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string merkle_path = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->merkle_path_size());
  for (int i = 0, n = this->merkle_path_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->merkle_path(i));
  }

  // string spending_ask = 4;
  if (this->spending_ask().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spending_ask());
  }

  // string nullifier = 5;
  if (this->nullifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nullifier());
  }

  // .prover_proto.ZethNote note = 3;
  if (this->has_note()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *note_);
  }

  // int64 address = 2;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinsplitInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.JoinsplitInput)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinsplitInput* source =
      ::google::protobuf::DynamicCastToGenerated<JoinsplitInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.JoinsplitInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.JoinsplitInput)
    MergeFrom(*source);
  }
}

void JoinsplitInput::MergeFrom(const JoinsplitInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.JoinsplitInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  merkle_path_.MergeFrom(from.merkle_path_);
  if (from.spending_ask().size() > 0) {

    spending_ask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spending_ask_);
  }
  if (from.nullifier().size() > 0) {

    nullifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nullifier_);
  }
  if (from.has_note()) {
    mutable_note()->::prover_proto::ZethNote::MergeFrom(from.note());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
}

void JoinsplitInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.JoinsplitInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinsplitInput::CopyFrom(const JoinsplitInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.JoinsplitInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinsplitInput::IsInitialized() const {
  return true;
}

void JoinsplitInput::Swap(JoinsplitInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinsplitInput::InternalSwap(JoinsplitInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  merkle_path_.InternalSwap(CastToBase(&other->merkle_path_));
  spending_ask_.Swap(&other->spending_ask_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nullifier_.Swap(&other->nullifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(note_, other->note_);
  swap(address_, other->address_);
}

::google::protobuf::Metadata JoinsplitInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2futil_2eproto);
  return ::file_level_metadata_api_2futil_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HexPointBaseGroup1Affine::InitAsDefaultInstance() {
}
class HexPointBaseGroup1Affine::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HexPointBaseGroup1Affine::kXCoordFieldNumber;
const int HexPointBaseGroup1Affine::kYCoordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HexPointBaseGroup1Affine::HexPointBaseGroup1Affine()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.HexPointBaseGroup1Affine)
}
HexPointBaseGroup1Affine::HexPointBaseGroup1Affine(const HexPointBaseGroup1Affine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_coord().size() > 0) {
    x_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_coord_);
  }
  y_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_coord().size() > 0) {
    y_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_coord_);
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.HexPointBaseGroup1Affine)
}

void HexPointBaseGroup1Affine::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HexPointBaseGroup1Affine_api_2futil_2eproto.base);
  x_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HexPointBaseGroup1Affine::~HexPointBaseGroup1Affine() {
  // @@protoc_insertion_point(destructor:prover_proto.HexPointBaseGroup1Affine)
  SharedDtor();
}

void HexPointBaseGroup1Affine::SharedDtor() {
  x_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HexPointBaseGroup1Affine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HexPointBaseGroup1Affine& HexPointBaseGroup1Affine::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HexPointBaseGroup1Affine_api_2futil_2eproto.base);
  return *internal_default_instance();
}


void HexPointBaseGroup1Affine::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.HexPointBaseGroup1Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HexPointBaseGroup1Affine::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HexPointBaseGroup1Affine*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string x_coord = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup1Affine.x_coord");
        object = msg->mutable_x_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string y_coord = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup1Affine.y_coord");
        object = msg->mutable_y_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HexPointBaseGroup1Affine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.HexPointBaseGroup1Affine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string x_coord = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->x_coord().data(), static_cast<int>(this->x_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup1Affine.x_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string y_coord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->y_coord().data(), static_cast<int>(this->y_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup1Affine.y_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.HexPointBaseGroup1Affine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.HexPointBaseGroup1Affine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HexPointBaseGroup1Affine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.HexPointBaseGroup1Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string x_coord = 1;
  if (this->x_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_coord().data(), static_cast<int>(this->x_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup1Affine.x_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->x_coord(), output);
  }

  // string y_coord = 2;
  if (this->y_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_coord().data(), static_cast<int>(this->y_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup1Affine.y_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->y_coord(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.HexPointBaseGroup1Affine)
}

::google::protobuf::uint8* HexPointBaseGroup1Affine::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.HexPointBaseGroup1Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string x_coord = 1;
  if (this->x_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_coord().data(), static_cast<int>(this->x_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup1Affine.x_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->x_coord(), target);
  }

  // string y_coord = 2;
  if (this->y_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_coord().data(), static_cast<int>(this->y_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup1Affine.y_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->y_coord(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.HexPointBaseGroup1Affine)
  return target;
}

size_t HexPointBaseGroup1Affine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.HexPointBaseGroup1Affine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string x_coord = 1;
  if (this->x_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x_coord());
  }

  // string y_coord = 2;
  if (this->y_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y_coord());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HexPointBaseGroup1Affine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.HexPointBaseGroup1Affine)
  GOOGLE_DCHECK_NE(&from, this);
  const HexPointBaseGroup1Affine* source =
      ::google::protobuf::DynamicCastToGenerated<HexPointBaseGroup1Affine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.HexPointBaseGroup1Affine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.HexPointBaseGroup1Affine)
    MergeFrom(*source);
  }
}

void HexPointBaseGroup1Affine::MergeFrom(const HexPointBaseGroup1Affine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.HexPointBaseGroup1Affine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_coord().size() > 0) {

    x_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_coord_);
  }
  if (from.y_coord().size() > 0) {

    y_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_coord_);
  }
}

void HexPointBaseGroup1Affine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.HexPointBaseGroup1Affine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HexPointBaseGroup1Affine::CopyFrom(const HexPointBaseGroup1Affine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.HexPointBaseGroup1Affine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HexPointBaseGroup1Affine::IsInitialized() const {
  return true;
}

void HexPointBaseGroup1Affine::Swap(HexPointBaseGroup1Affine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HexPointBaseGroup1Affine::InternalSwap(HexPointBaseGroup1Affine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  x_coord_.Swap(&other->x_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_coord_.Swap(&other->y_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HexPointBaseGroup1Affine::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2futil_2eproto);
  return ::file_level_metadata_api_2futil_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HexPointBaseGroup2Affine::InitAsDefaultInstance() {
}
class HexPointBaseGroup2Affine::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HexPointBaseGroup2Affine::kXC1CoordFieldNumber;
const int HexPointBaseGroup2Affine::kXC0CoordFieldNumber;
const int HexPointBaseGroup2Affine::kYC1CoordFieldNumber;
const int HexPointBaseGroup2Affine::kYC0CoordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HexPointBaseGroup2Affine::HexPointBaseGroup2Affine()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.HexPointBaseGroup2Affine)
}
HexPointBaseGroup2Affine::HexPointBaseGroup2Affine(const HexPointBaseGroup2Affine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c1_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_c1_coord().size() > 0) {
    x_c1_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_coord_);
  }
  x_c0_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_c0_coord().size() > 0) {
    x_c0_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_coord_);
  }
  y_c1_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_c1_coord().size() > 0) {
    y_c1_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_coord_);
  }
  y_c0_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_c0_coord().size() > 0) {
    y_c0_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_coord_);
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.HexPointBaseGroup2Affine)
}

void HexPointBaseGroup2Affine::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HexPointBaseGroup2Affine_api_2futil_2eproto.base);
  x_c1_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c0_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_coord_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HexPointBaseGroup2Affine::~HexPointBaseGroup2Affine() {
  // @@protoc_insertion_point(destructor:prover_proto.HexPointBaseGroup2Affine)
  SharedDtor();
}

void HexPointBaseGroup2Affine::SharedDtor() {
  x_c1_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c0_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_coord_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HexPointBaseGroup2Affine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HexPointBaseGroup2Affine& HexPointBaseGroup2Affine::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HexPointBaseGroup2Affine_api_2futil_2eproto.base);
  return *internal_default_instance();
}


void HexPointBaseGroup2Affine::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.HexPointBaseGroup2Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_c1_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c0_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_coord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HexPointBaseGroup2Affine::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HexPointBaseGroup2Affine*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string x_c1_coord = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup2Affine.x_c1_coord");
        object = msg->mutable_x_c1_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string x_c0_coord = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup2Affine.x_c0_coord");
        object = msg->mutable_x_c0_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string y_c1_coord = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup2Affine.y_c1_coord");
        object = msg->mutable_y_c1_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string y_c0_coord = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.HexPointBaseGroup2Affine.y_c0_coord");
        object = msg->mutable_y_c0_coord();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HexPointBaseGroup2Affine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.HexPointBaseGroup2Affine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string x_c1_coord = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x_c1_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->x_c1_coord().data(), static_cast<int>(this->x_c1_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup2Affine.x_c1_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string x_c0_coord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x_c0_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->x_c0_coord().data(), static_cast<int>(this->x_c0_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup2Affine.x_c0_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string y_c1_coord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y_c1_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->y_c1_coord().data(), static_cast<int>(this->y_c1_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup2Affine.y_c1_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string y_c0_coord = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y_c0_coord()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->y_c0_coord().data(), static_cast<int>(this->y_c0_coord().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.HexPointBaseGroup2Affine.y_c0_coord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.HexPointBaseGroup2Affine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.HexPointBaseGroup2Affine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HexPointBaseGroup2Affine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.HexPointBaseGroup2Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string x_c1_coord = 1;
  if (this->x_c1_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_c1_coord().data(), static_cast<int>(this->x_c1_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.x_c1_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->x_c1_coord(), output);
  }

  // string x_c0_coord = 2;
  if (this->x_c0_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_c0_coord().data(), static_cast<int>(this->x_c0_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.x_c0_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->x_c0_coord(), output);
  }

  // string y_c1_coord = 3;
  if (this->y_c1_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_c1_coord().data(), static_cast<int>(this->y_c1_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.y_c1_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->y_c1_coord(), output);
  }

  // string y_c0_coord = 4;
  if (this->y_c0_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_c0_coord().data(), static_cast<int>(this->y_c0_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.y_c0_coord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->y_c0_coord(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.HexPointBaseGroup2Affine)
}

::google::protobuf::uint8* HexPointBaseGroup2Affine::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.HexPointBaseGroup2Affine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string x_c1_coord = 1;
  if (this->x_c1_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_c1_coord().data(), static_cast<int>(this->x_c1_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.x_c1_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->x_c1_coord(), target);
  }

  // string x_c0_coord = 2;
  if (this->x_c0_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x_c0_coord().data(), static_cast<int>(this->x_c0_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.x_c0_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->x_c0_coord(), target);
  }

  // string y_c1_coord = 3;
  if (this->y_c1_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_c1_coord().data(), static_cast<int>(this->y_c1_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.y_c1_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->y_c1_coord(), target);
  }

  // string y_c0_coord = 4;
  if (this->y_c0_coord().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->y_c0_coord().data(), static_cast<int>(this->y_c0_coord().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.HexPointBaseGroup2Affine.y_c0_coord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->y_c0_coord(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.HexPointBaseGroup2Affine)
  return target;
}

size_t HexPointBaseGroup2Affine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.HexPointBaseGroup2Affine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string x_c1_coord = 1;
  if (this->x_c1_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x_c1_coord());
  }

  // string x_c0_coord = 2;
  if (this->x_c0_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x_c0_coord());
  }

  // string y_c1_coord = 3;
  if (this->y_c1_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y_c1_coord());
  }

  // string y_c0_coord = 4;
  if (this->y_c0_coord().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y_c0_coord());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HexPointBaseGroup2Affine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.HexPointBaseGroup2Affine)
  GOOGLE_DCHECK_NE(&from, this);
  const HexPointBaseGroup2Affine* source =
      ::google::protobuf::DynamicCastToGenerated<HexPointBaseGroup2Affine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.HexPointBaseGroup2Affine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.HexPointBaseGroup2Affine)
    MergeFrom(*source);
  }
}

void HexPointBaseGroup2Affine::MergeFrom(const HexPointBaseGroup2Affine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.HexPointBaseGroup2Affine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_c1_coord().size() > 0) {

    x_c1_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_coord_);
  }
  if (from.x_c0_coord().size() > 0) {

    x_c0_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_coord_);
  }
  if (from.y_c1_coord().size() > 0) {

    y_c1_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_coord_);
  }
  if (from.y_c0_coord().size() > 0) {

    y_c0_coord_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_coord_);
  }
}

void HexPointBaseGroup2Affine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.HexPointBaseGroup2Affine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HexPointBaseGroup2Affine::CopyFrom(const HexPointBaseGroup2Affine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.HexPointBaseGroup2Affine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HexPointBaseGroup2Affine::IsInitialized() const {
  return true;
}

void HexPointBaseGroup2Affine::Swap(HexPointBaseGroup2Affine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HexPointBaseGroup2Affine::InternalSwap(HexPointBaseGroup2Affine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  x_c1_coord_.Swap(&other->x_c1_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c0_coord_.Swap(&other->x_c0_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_coord_.Swap(&other->y_c1_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_coord_.Swap(&other->y_c0_coord_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HexPointBaseGroup2Affine::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2futil_2eproto);
  return ::file_level_metadata_api_2futil_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prover_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::prover_proto::ZethNote* Arena::CreateMaybeMessage< ::prover_proto::ZethNote >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::ZethNote >(arena);
}
template<> PROTOBUF_NOINLINE ::prover_proto::JoinsplitInput* Arena::CreateMaybeMessage< ::prover_proto::JoinsplitInput >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::JoinsplitInput >(arena);
}
template<> PROTOBUF_NOINLINE ::prover_proto::HexPointBaseGroup1Affine* Arena::CreateMaybeMessage< ::prover_proto::HexPointBaseGroup1Affine >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::HexPointBaseGroup1Affine >(arena);
}
template<> PROTOBUF_NOINLINE ::prover_proto::HexPointBaseGroup2Affine* Arena::CreateMaybeMessage< ::prover_proto::HexPointBaseGroup2Affine >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::HexPointBaseGroup2Affine >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
