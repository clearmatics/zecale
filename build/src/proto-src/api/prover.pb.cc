// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/prover.proto

#include "api/prover.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_api_2fgroth16_5fmessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExtendedProofGROTH16_api_2fgroth16_5fmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2fgroth16_5fmessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VerificationKeyGROTH16_api_2fgroth16_5fmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2fpghr13_5fmessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExtendedProofPGHR13_api_2fpghr13_5fmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2fpghr13_5fmessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VerificationKeyPGHR13_api_2fpghr13_5fmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2futil_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ZethNote_api_2futil_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2futil_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JoinsplitInput_api_2futil_2eproto;
namespace prover_proto {
class ProofInputsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProofInputs> _instance;
} _ProofInputs_default_instance_;
class VerificationKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerificationKey> _instance;
  const ::prover_proto::VerificationKeyPGHR13* pghr13_verification_key_;
  const ::prover_proto::VerificationKeyGROTH16* groth16_verification_key_;
} _VerificationKey_default_instance_;
class ExtendedProofDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtendedProof> _instance;
  const ::prover_proto::ExtendedProofPGHR13* pghr13_extended_proof_;
  const ::prover_proto::ExtendedProofGROTH16* groth16_extended_proof_;
} _ExtendedProof_default_instance_;
}  // namespace prover_proto
static void InitDefaultsProofInputs_api_2fprover_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_ProofInputs_default_instance_;
    new (ptr) ::prover_proto::ProofInputs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::ProofInputs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ProofInputs_api_2fprover_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProofInputs_api_2fprover_2eproto}, {
      &scc_info_JoinsplitInput_api_2futil_2eproto.base,
      &scc_info_ZethNote_api_2futil_2eproto.base,}};

static void InitDefaultsVerificationKey_api_2fprover_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_VerificationKey_default_instance_;
    new (ptr) ::prover_proto::VerificationKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::VerificationKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VerificationKey_api_2fprover_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVerificationKey_api_2fprover_2eproto}, {
      &scc_info_VerificationKeyPGHR13_api_2fpghr13_5fmessages_2eproto.base,
      &scc_info_VerificationKeyGROTH16_api_2fgroth16_5fmessages_2eproto.base,}};

static void InitDefaultsExtendedProof_api_2fprover_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prover_proto::_ExtendedProof_default_instance_;
    new (ptr) ::prover_proto::ExtendedProof();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prover_proto::ExtendedProof::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExtendedProof_api_2fprover_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExtendedProof_api_2fprover_2eproto}, {
      &scc_info_ExtendedProofPGHR13_api_2fpghr13_5fmessages_2eproto.base,
      &scc_info_ExtendedProofGROTH16_api_2fgroth16_5fmessages_2eproto.base,}};

void InitDefaults_api_2fprover_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProofInputs_api_2fprover_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerificationKey_api_2fprover_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtendedProof_api_2fprover_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_api_2fprover_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_api_2fprover_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_api_2fprover_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_api_2fprover_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, mk_root_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, js_inputs_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, js_outputs_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, pub_in_value_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, pub_out_value_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, h_sig_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ProofInputs, phi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::VerificationKey, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::prover_proto::VerificationKey, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::prover_proto::VerificationKeyDefaultTypeInternal, pghr13_verification_key_),
  offsetof(::prover_proto::VerificationKeyDefaultTypeInternal, groth16_verification_key_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::VerificationKey, VK_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ExtendedProof, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::prover_proto::ExtendedProof, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::prover_proto::ExtendedProofDefaultTypeInternal, pghr13_extended_proof_),
  offsetof(::prover_proto::ExtendedProofDefaultTypeInternal, groth16_extended_proof_),
  PROTOBUF_FIELD_OFFSET(::prover_proto::ExtendedProof, EP_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prover_proto::ProofInputs)},
  { 12, -1, sizeof(::prover_proto::VerificationKey)},
  { 20, -1, sizeof(::prover_proto::ExtendedProof)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_ProofInputs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_VerificationKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prover_proto::_ExtendedProof_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_api_2fprover_2eproto = {
  {}, AddDescriptors_api_2fprover_2eproto, "api/prover.proto", schemas,
  file_default_instances, TableStruct_api_2fprover_2eproto::offsets,
  file_level_metadata_api_2fprover_2eproto, 3, file_level_enum_descriptors_api_2fprover_2eproto, file_level_service_descriptors_api_2fprover_2eproto,
};

const char descriptor_table_protodef_api_2fprover_2eproto[] =
  "\n\020api/prover.proto\022\014prover_proto\032\033google"
  "/protobuf/empty.proto\032\031api/pghr13_messag"
  "es.proto\032\032api/groth16_messages.proto\"\304\001\n"
  "\013ProofInputs\022\017\n\007mk_root\030\001 \001(\t\022/\n\tjs_inpu"
  "ts\030\002 \003(\0132\034.prover_proto.JoinsplitInput\022*"
  "\n\njs_outputs\030\003 \003(\0132\026.prover_proto.ZethNo"
  "te\022\024\n\014pub_in_value\030\004 \001(\t\022\025\n\rpub_out_valu"
  "e\030\005 \001(\t\022\r\n\005h_sig\030\006 \001(\t\022\013\n\003phi\030\007 \001(\t\"\251\001\n\017"
  "VerificationKey\022F\n\027pghr13_verification_k"
  "ey\030\001 \001(\0132#.prover_proto.VerificationKeyP"
  "GHR13H\000\022H\n\030groth16_verification_key\030\002 \001("
  "\0132$.prover_proto.VerificationKeyGROTH16H"
  "\000B\004\n\002VK\"\237\001\n\rExtendedProof\022B\n\025pghr13_exte"
  "nded_proof\030\001 \001(\0132!.prover_proto.Extended"
  "ProofPGHR13H\000\022D\n\026groth16_extended_proof\030"
  "\002 \001(\0132\".prover_proto.ExtendedProofGROTH1"
  "6H\000B\004\n\002EP2\232\001\n\006Prover\022M\n\022GetVerificationK"
  "ey\022\026.google.protobuf.Empty\032\035.prover_prot"
  "o.VerificationKey\"\000\022A\n\005Prove\022\031.prover_pr"
  "oto.ProofInputs\032\033.prover_proto.ExtendedP"
  "roof\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_api_2fprover_2eproto = {
  false, InitDefaults_api_2fprover_2eproto, 
  descriptor_table_protodef_api_2fprover_2eproto,
  "api/prover.proto", &assign_descriptors_table_api_2fprover_2eproto, 814,
};

void AddDescriptors_api_2fprover_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
    ::AddDescriptors_api_2fpghr13_5fmessages_2eproto,
    ::AddDescriptors_api_2fgroth16_5fmessages_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_api_2fprover_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_api_2fprover_2eproto = []() { AddDescriptors_api_2fprover_2eproto(); return true; }();
namespace prover_proto {

// ===================================================================

void ProofInputs::InitAsDefaultInstance() {
}
class ProofInputs::HasBitSetters {
 public:
};

void ProofInputs::clear_js_inputs() {
  js_inputs_.Clear();
}
void ProofInputs::clear_js_outputs() {
  js_outputs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProofInputs::kMkRootFieldNumber;
const int ProofInputs::kJsInputsFieldNumber;
const int ProofInputs::kJsOutputsFieldNumber;
const int ProofInputs::kPubInValueFieldNumber;
const int ProofInputs::kPubOutValueFieldNumber;
const int ProofInputs::kHSigFieldNumber;
const int ProofInputs::kPhiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProofInputs::ProofInputs()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.ProofInputs)
}
ProofInputs::ProofInputs(const ProofInputs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      js_inputs_(from.js_inputs_),
      js_outputs_(from.js_outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mk_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mk_root().size() > 0) {
    mk_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mk_root_);
  }
  pub_in_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pub_in_value().size() > 0) {
    pub_in_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_in_value_);
  }
  pub_out_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pub_out_value().size() > 0) {
    pub_out_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_out_value_);
  }
  h_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.h_sig().size() > 0) {
    h_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.h_sig_);
  }
  phi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phi().size() > 0) {
    phi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phi_);
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.ProofInputs)
}

void ProofInputs::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProofInputs_api_2fprover_2eproto.base);
  mk_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_in_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_out_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h_sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProofInputs::~ProofInputs() {
  // @@protoc_insertion_point(destructor:prover_proto.ProofInputs)
  SharedDtor();
}

void ProofInputs::SharedDtor() {
  mk_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_in_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_out_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h_sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProofInputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProofInputs& ProofInputs::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProofInputs_api_2fprover_2eproto.base);
  return *internal_default_instance();
}


void ProofInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.ProofInputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  js_inputs_.Clear();
  js_outputs_.Clear();
  mk_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_in_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_out_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  h_sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProofInputs::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProofInputs*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string mk_root = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ProofInputs.mk_root");
        object = msg->mutable_mk_root();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .prover_proto.JoinsplitInput js_inputs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::prover_proto::JoinsplitInput::_InternalParse;
          object = msg->add_js_inputs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .prover_proto.ZethNote js_outputs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::prover_proto::ZethNote::_InternalParse;
          object = msg->add_js_outputs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // string pub_in_value = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ProofInputs.pub_in_value");
        object = msg->mutable_pub_in_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string pub_out_value = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ProofInputs.pub_out_value");
        object = msg->mutable_pub_out_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string h_sig = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ProofInputs.h_sig");
        object = msg->mutable_h_sig();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string phi = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("prover_proto.ProofInputs.phi");
        object = msg->mutable_phi();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProofInputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.ProofInputs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mk_root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mk_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mk_root().data(), static_cast<int>(this->mk_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ProofInputs.mk_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prover_proto.JoinsplitInput js_inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_js_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prover_proto.ZethNote js_outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_js_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pub_in_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pub_in_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pub_in_value().data(), static_cast<int>(this->pub_in_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ProofInputs.pub_in_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pub_out_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pub_out_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pub_out_value().data(), static_cast<int>(this->pub_out_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ProofInputs.pub_out_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string h_sig = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_h_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->h_sig().data(), static_cast<int>(this->h_sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ProofInputs.h_sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phi = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phi().data(), static_cast<int>(this->phi().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prover_proto.ProofInputs.phi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.ProofInputs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.ProofInputs)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProofInputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.ProofInputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mk_root = 1;
  if (this->mk_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mk_root().data(), static_cast<int>(this->mk_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.mk_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mk_root(), output);
  }

  // repeated .prover_proto.JoinsplitInput js_inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->js_inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->js_inputs(static_cast<int>(i)),
      output);
  }

  // repeated .prover_proto.ZethNote js_outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->js_outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->js_outputs(static_cast<int>(i)),
      output);
  }

  // string pub_in_value = 4;
  if (this->pub_in_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pub_in_value().data(), static_cast<int>(this->pub_in_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.pub_in_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pub_in_value(), output);
  }

  // string pub_out_value = 5;
  if (this->pub_out_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pub_out_value().data(), static_cast<int>(this->pub_out_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.pub_out_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pub_out_value(), output);
  }

  // string h_sig = 6;
  if (this->h_sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->h_sig().data(), static_cast<int>(this->h_sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.h_sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->h_sig(), output);
  }

  // string phi = 7;
  if (this->phi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phi().data(), static_cast<int>(this->phi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.phi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->phi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.ProofInputs)
}

::google::protobuf::uint8* ProofInputs::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.ProofInputs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mk_root = 1;
  if (this->mk_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mk_root().data(), static_cast<int>(this->mk_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.mk_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mk_root(), target);
  }

  // repeated .prover_proto.JoinsplitInput js_inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->js_inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->js_inputs(static_cast<int>(i)), target);
  }

  // repeated .prover_proto.ZethNote js_outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->js_outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->js_outputs(static_cast<int>(i)), target);
  }

  // string pub_in_value = 4;
  if (this->pub_in_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pub_in_value().data(), static_cast<int>(this->pub_in_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.pub_in_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pub_in_value(), target);
  }

  // string pub_out_value = 5;
  if (this->pub_out_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pub_out_value().data(), static_cast<int>(this->pub_out_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.pub_out_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pub_out_value(), target);
  }

  // string h_sig = 6;
  if (this->h_sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->h_sig().data(), static_cast<int>(this->h_sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.h_sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->h_sig(), target);
  }

  // string phi = 7;
  if (this->phi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phi().data(), static_cast<int>(this->phi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prover_proto.ProofInputs.phi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->phi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.ProofInputs)
  return target;
}

size_t ProofInputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.ProofInputs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .prover_proto.JoinsplitInput js_inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->js_inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->js_inputs(static_cast<int>(i)));
    }
  }

  // repeated .prover_proto.ZethNote js_outputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->js_outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->js_outputs(static_cast<int>(i)));
    }
  }

  // string mk_root = 1;
  if (this->mk_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mk_root());
  }

  // string pub_in_value = 4;
  if (this->pub_in_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pub_in_value());
  }

  // string pub_out_value = 5;
  if (this->pub_out_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pub_out_value());
  }

  // string h_sig = 6;
  if (this->h_sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->h_sig());
  }

  // string phi = 7;
  if (this->phi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProofInputs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.ProofInputs)
  GOOGLE_DCHECK_NE(&from, this);
  const ProofInputs* source =
      ::google::protobuf::DynamicCastToGenerated<ProofInputs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.ProofInputs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.ProofInputs)
    MergeFrom(*source);
  }
}

void ProofInputs::MergeFrom(const ProofInputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.ProofInputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  js_inputs_.MergeFrom(from.js_inputs_);
  js_outputs_.MergeFrom(from.js_outputs_);
  if (from.mk_root().size() > 0) {

    mk_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mk_root_);
  }
  if (from.pub_in_value().size() > 0) {

    pub_in_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_in_value_);
  }
  if (from.pub_out_value().size() > 0) {

    pub_out_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_out_value_);
  }
  if (from.h_sig().size() > 0) {

    h_sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.h_sig_);
  }
  if (from.phi().size() > 0) {

    phi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phi_);
  }
}

void ProofInputs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.ProofInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProofInputs::CopyFrom(const ProofInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.ProofInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProofInputs::IsInitialized() const {
  return true;
}

void ProofInputs::Swap(ProofInputs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProofInputs::InternalSwap(ProofInputs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&js_inputs_)->InternalSwap(CastToBase(&other->js_inputs_));
  CastToBase(&js_outputs_)->InternalSwap(CastToBase(&other->js_outputs_));
  mk_root_.Swap(&other->mk_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pub_in_value_.Swap(&other->pub_in_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pub_out_value_.Swap(&other->pub_out_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  h_sig_.Swap(&other->h_sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phi_.Swap(&other->phi_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ProofInputs::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2fprover_2eproto);
  return ::file_level_metadata_api_2fprover_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VerificationKey::InitAsDefaultInstance() {
  ::prover_proto::_VerificationKey_default_instance_.pghr13_verification_key_ = const_cast< ::prover_proto::VerificationKeyPGHR13*>(
      ::prover_proto::VerificationKeyPGHR13::internal_default_instance());
  ::prover_proto::_VerificationKey_default_instance_.groth16_verification_key_ = const_cast< ::prover_proto::VerificationKeyGROTH16*>(
      ::prover_proto::VerificationKeyGROTH16::internal_default_instance());
}
class VerificationKey::HasBitSetters {
 public:
  static const ::prover_proto::VerificationKeyPGHR13& pghr13_verification_key(const VerificationKey* msg);
  static const ::prover_proto::VerificationKeyGROTH16& groth16_verification_key(const VerificationKey* msg);
};

const ::prover_proto::VerificationKeyPGHR13&
VerificationKey::HasBitSetters::pghr13_verification_key(const VerificationKey* msg) {
  return *msg->VK_.pghr13_verification_key_;
}
const ::prover_proto::VerificationKeyGROTH16&
VerificationKey::HasBitSetters::groth16_verification_key(const VerificationKey* msg) {
  return *msg->VK_.groth16_verification_key_;
}
void VerificationKey::set_allocated_pghr13_verification_key(::prover_proto::VerificationKeyPGHR13* pghr13_verification_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_VK();
  if (pghr13_verification_key) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pghr13_verification_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pghr13_verification_key, submessage_arena);
    }
    set_has_pghr13_verification_key();
    VK_.pghr13_verification_key_ = pghr13_verification_key;
  }
  // @@protoc_insertion_point(field_set_allocated:prover_proto.VerificationKey.pghr13_verification_key)
}
void VerificationKey::clear_pghr13_verification_key() {
  if (has_pghr13_verification_key()) {
    delete VK_.pghr13_verification_key_;
    clear_has_VK();
  }
}
void VerificationKey::set_allocated_groth16_verification_key(::prover_proto::VerificationKeyGROTH16* groth16_verification_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_VK();
  if (groth16_verification_key) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      groth16_verification_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, groth16_verification_key, submessage_arena);
    }
    set_has_groth16_verification_key();
    VK_.groth16_verification_key_ = groth16_verification_key;
  }
  // @@protoc_insertion_point(field_set_allocated:prover_proto.VerificationKey.groth16_verification_key)
}
void VerificationKey::clear_groth16_verification_key() {
  if (has_groth16_verification_key()) {
    delete VK_.groth16_verification_key_;
    clear_has_VK();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerificationKey::kPghr13VerificationKeyFieldNumber;
const int VerificationKey::kGroth16VerificationKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerificationKey::VerificationKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.VerificationKey)
}
VerificationKey::VerificationKey(const VerificationKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_VK();
  switch (from.VK_case()) {
    case kPghr13VerificationKey: {
      mutable_pghr13_verification_key()->::prover_proto::VerificationKeyPGHR13::MergeFrom(from.pghr13_verification_key());
      break;
    }
    case kGroth16VerificationKey: {
      mutable_groth16_verification_key()->::prover_proto::VerificationKeyGROTH16::MergeFrom(from.groth16_verification_key());
      break;
    }
    case VK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.VerificationKey)
}

void VerificationKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VerificationKey_api_2fprover_2eproto.base);
  clear_has_VK();
}

VerificationKey::~VerificationKey() {
  // @@protoc_insertion_point(destructor:prover_proto.VerificationKey)
  SharedDtor();
}

void VerificationKey::SharedDtor() {
  if (has_VK()) {
    clear_VK();
  }
}

void VerificationKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VerificationKey& VerificationKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VerificationKey_api_2fprover_2eproto.base);
  return *internal_default_instance();
}


void VerificationKey::clear_VK() {
// @@protoc_insertion_point(one_of_clear_start:prover_proto.VerificationKey)
  switch (VK_case()) {
    case kPghr13VerificationKey: {
      delete VK_.pghr13_verification_key_;
      break;
    }
    case kGroth16VerificationKey: {
      delete VK_.groth16_verification_key_;
      break;
    }
    case VK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VK_NOT_SET;
}


void VerificationKey::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.VerificationKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_VK();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VerificationKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VerificationKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::prover_proto::VerificationKeyPGHR13::_InternalParse;
        object = msg->mutable_pghr13_verification_key();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::prover_proto::VerificationKeyGROTH16::_InternalParse;
        object = msg->mutable_groth16_verification_key();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VerificationKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.VerificationKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pghr13_verification_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_groth16_verification_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.VerificationKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.VerificationKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VerificationKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.VerificationKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
  if (has_pghr13_verification_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pghr13_verification_key(this), output);
  }

  // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
  if (has_groth16_verification_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::groth16_verification_key(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.VerificationKey)
}

::google::protobuf::uint8* VerificationKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.VerificationKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
  if (has_pghr13_verification_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pghr13_verification_key(this), target);
  }

  // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
  if (has_groth16_verification_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::groth16_verification_key(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.VerificationKey)
  return target;
}

size_t VerificationKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.VerificationKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (VK_case()) {
    // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
    case kPghr13VerificationKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *VK_.pghr13_verification_key_);
      break;
    }
    // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
    case kGroth16VerificationKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *VK_.groth16_verification_key_);
      break;
    }
    case VK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerificationKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.VerificationKey)
  GOOGLE_DCHECK_NE(&from, this);
  const VerificationKey* source =
      ::google::protobuf::DynamicCastToGenerated<VerificationKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.VerificationKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.VerificationKey)
    MergeFrom(*source);
  }
}

void VerificationKey::MergeFrom(const VerificationKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.VerificationKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.VK_case()) {
    case kPghr13VerificationKey: {
      mutable_pghr13_verification_key()->::prover_proto::VerificationKeyPGHR13::MergeFrom(from.pghr13_verification_key());
      break;
    }
    case kGroth16VerificationKey: {
      mutable_groth16_verification_key()->::prover_proto::VerificationKeyGROTH16::MergeFrom(from.groth16_verification_key());
      break;
    }
    case VK_NOT_SET: {
      break;
    }
  }
}

void VerificationKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.VerificationKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerificationKey::CopyFrom(const VerificationKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.VerificationKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerificationKey::IsInitialized() const {
  return true;
}

void VerificationKey::Swap(VerificationKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerificationKey::InternalSwap(VerificationKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(VK_, other->VK_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata VerificationKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2fprover_2eproto);
  return ::file_level_metadata_api_2fprover_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ExtendedProof::InitAsDefaultInstance() {
  ::prover_proto::_ExtendedProof_default_instance_.pghr13_extended_proof_ = const_cast< ::prover_proto::ExtendedProofPGHR13*>(
      ::prover_proto::ExtendedProofPGHR13::internal_default_instance());
  ::prover_proto::_ExtendedProof_default_instance_.groth16_extended_proof_ = const_cast< ::prover_proto::ExtendedProofGROTH16*>(
      ::prover_proto::ExtendedProofGROTH16::internal_default_instance());
}
class ExtendedProof::HasBitSetters {
 public:
  static const ::prover_proto::ExtendedProofPGHR13& pghr13_extended_proof(const ExtendedProof* msg);
  static const ::prover_proto::ExtendedProofGROTH16& groth16_extended_proof(const ExtendedProof* msg);
};

const ::prover_proto::ExtendedProofPGHR13&
ExtendedProof::HasBitSetters::pghr13_extended_proof(const ExtendedProof* msg) {
  return *msg->EP_.pghr13_extended_proof_;
}
const ::prover_proto::ExtendedProofGROTH16&
ExtendedProof::HasBitSetters::groth16_extended_proof(const ExtendedProof* msg) {
  return *msg->EP_.groth16_extended_proof_;
}
void ExtendedProof::set_allocated_pghr13_extended_proof(::prover_proto::ExtendedProofPGHR13* pghr13_extended_proof) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_EP();
  if (pghr13_extended_proof) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pghr13_extended_proof = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pghr13_extended_proof, submessage_arena);
    }
    set_has_pghr13_extended_proof();
    EP_.pghr13_extended_proof_ = pghr13_extended_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ExtendedProof.pghr13_extended_proof)
}
void ExtendedProof::clear_pghr13_extended_proof() {
  if (has_pghr13_extended_proof()) {
    delete EP_.pghr13_extended_proof_;
    clear_has_EP();
  }
}
void ExtendedProof::set_allocated_groth16_extended_proof(::prover_proto::ExtendedProofGROTH16* groth16_extended_proof) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_EP();
  if (groth16_extended_proof) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      groth16_extended_proof = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, groth16_extended_proof, submessage_arena);
    }
    set_has_groth16_extended_proof();
    EP_.groth16_extended_proof_ = groth16_extended_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ExtendedProof.groth16_extended_proof)
}
void ExtendedProof::clear_groth16_extended_proof() {
  if (has_groth16_extended_proof()) {
    delete EP_.groth16_extended_proof_;
    clear_has_EP();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtendedProof::kPghr13ExtendedProofFieldNumber;
const int ExtendedProof::kGroth16ExtendedProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtendedProof::ExtendedProof()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:prover_proto.ExtendedProof)
}
ExtendedProof::ExtendedProof(const ExtendedProof& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_EP();
  switch (from.EP_case()) {
    case kPghr13ExtendedProof: {
      mutable_pghr13_extended_proof()->::prover_proto::ExtendedProofPGHR13::MergeFrom(from.pghr13_extended_proof());
      break;
    }
    case kGroth16ExtendedProof: {
      mutable_groth16_extended_proof()->::prover_proto::ExtendedProofGROTH16::MergeFrom(from.groth16_extended_proof());
      break;
    }
    case EP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:prover_proto.ExtendedProof)
}

void ExtendedProof::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExtendedProof_api_2fprover_2eproto.base);
  clear_has_EP();
}

ExtendedProof::~ExtendedProof() {
  // @@protoc_insertion_point(destructor:prover_proto.ExtendedProof)
  SharedDtor();
}

void ExtendedProof::SharedDtor() {
  if (has_EP()) {
    clear_EP();
  }
}

void ExtendedProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtendedProof& ExtendedProof::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExtendedProof_api_2fprover_2eproto.base);
  return *internal_default_instance();
}


void ExtendedProof::clear_EP() {
// @@protoc_insertion_point(one_of_clear_start:prover_proto.ExtendedProof)
  switch (EP_case()) {
    case kPghr13ExtendedProof: {
      delete EP_.pghr13_extended_proof_;
      break;
    }
    case kGroth16ExtendedProof: {
      delete EP_.groth16_extended_proof_;
      break;
    }
    case EP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EP_NOT_SET;
}


void ExtendedProof::Clear() {
// @@protoc_insertion_point(message_clear_start:prover_proto.ExtendedProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_EP();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExtendedProof::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExtendedProof*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::prover_proto::ExtendedProofPGHR13::_InternalParse;
        object = msg->mutable_pghr13_extended_proof();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::prover_proto::ExtendedProofGROTH16::_InternalParse;
        object = msg->mutable_groth16_extended_proof();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExtendedProof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prover_proto.ExtendedProof)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pghr13_extended_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_groth16_extended_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prover_proto.ExtendedProof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prover_proto.ExtendedProof)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExtendedProof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prover_proto.ExtendedProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
  if (has_pghr13_extended_proof()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pghr13_extended_proof(this), output);
  }

  // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
  if (has_groth16_extended_proof()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::groth16_extended_proof(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:prover_proto.ExtendedProof)
}

::google::protobuf::uint8* ExtendedProof::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:prover_proto.ExtendedProof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
  if (has_pghr13_extended_proof()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pghr13_extended_proof(this), target);
  }

  // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
  if (has_groth16_extended_proof()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::groth16_extended_proof(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prover_proto.ExtendedProof)
  return target;
}

size_t ExtendedProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prover_proto.ExtendedProof)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (EP_case()) {
    // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
    case kPghr13ExtendedProof: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *EP_.pghr13_extended_proof_);
      break;
    }
    // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
    case kGroth16ExtendedProof: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *EP_.groth16_extended_proof_);
      break;
    }
    case EP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtendedProof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prover_proto.ExtendedProof)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtendedProof* source =
      ::google::protobuf::DynamicCastToGenerated<ExtendedProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prover_proto.ExtendedProof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prover_proto.ExtendedProof)
    MergeFrom(*source);
  }
}

void ExtendedProof::MergeFrom(const ExtendedProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prover_proto.ExtendedProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.EP_case()) {
    case kPghr13ExtendedProof: {
      mutable_pghr13_extended_proof()->::prover_proto::ExtendedProofPGHR13::MergeFrom(from.pghr13_extended_proof());
      break;
    }
    case kGroth16ExtendedProof: {
      mutable_groth16_extended_proof()->::prover_proto::ExtendedProofGROTH16::MergeFrom(from.groth16_extended_proof());
      break;
    }
    case EP_NOT_SET: {
      break;
    }
  }
}

void ExtendedProof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prover_proto.ExtendedProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedProof::CopyFrom(const ExtendedProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prover_proto.ExtendedProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedProof::IsInitialized() const {
  return true;
}

void ExtendedProof::Swap(ExtendedProof* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtendedProof::InternalSwap(ExtendedProof* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(EP_, other->EP_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ExtendedProof::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_api_2fprover_2eproto);
  return ::file_level_metadata_api_2fprover_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prover_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::prover_proto::ProofInputs* Arena::CreateMaybeMessage< ::prover_proto::ProofInputs >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::ProofInputs >(arena);
}
template<> PROTOBUF_NOINLINE ::prover_proto::VerificationKey* Arena::CreateMaybeMessage< ::prover_proto::VerificationKey >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::VerificationKey >(arena);
}
template<> PROTOBUF_NOINLINE ::prover_proto::ExtendedProof* Arena::CreateMaybeMessage< ::prover_proto::ExtendedProof >(Arena* arena) {
  return Arena::CreateInternal< ::prover_proto::ExtendedProof >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
