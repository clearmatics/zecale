// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/prover.proto

#ifndef PROTOBUF_INCLUDED_api_2fprover_2eproto
#define PROTOBUF_INCLUDED_api_2fprover_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
#include "api/pghr13_messages.pb.h"
#include "api/groth16_messages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_api_2fprover_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fprover_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_api_2fprover_2eproto();
namespace prover_proto {
class ExtendedProof;
class ExtendedProofDefaultTypeInternal;
extern ExtendedProofDefaultTypeInternal _ExtendedProof_default_instance_;
class ProofInputs;
class ProofInputsDefaultTypeInternal;
extern ProofInputsDefaultTypeInternal _ProofInputs_default_instance_;
class VerificationKey;
class VerificationKeyDefaultTypeInternal;
extern VerificationKeyDefaultTypeInternal _VerificationKey_default_instance_;
}  // namespace prover_proto
namespace google {
namespace protobuf {
template<> ::prover_proto::ExtendedProof* Arena::CreateMaybeMessage<::prover_proto::ExtendedProof>(Arena*);
template<> ::prover_proto::ProofInputs* Arena::CreateMaybeMessage<::prover_proto::ProofInputs>(Arena*);
template<> ::prover_proto::VerificationKey* Arena::CreateMaybeMessage<::prover_proto::VerificationKey>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace prover_proto {

// ===================================================================

class ProofInputs final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prover_proto.ProofInputs) */ {
 public:
  ProofInputs();
  virtual ~ProofInputs();

  ProofInputs(const ProofInputs& from);

  inline ProofInputs& operator=(const ProofInputs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProofInputs(ProofInputs&& from) noexcept
    : ProofInputs() {
    *this = ::std::move(from);
  }

  inline ProofInputs& operator=(ProofInputs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProofInputs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProofInputs* internal_default_instance() {
    return reinterpret_cast<const ProofInputs*>(
               &_ProofInputs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProofInputs* other);
  friend void swap(ProofInputs& a, ProofInputs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProofInputs* New() const final {
    return CreateMaybeMessage<ProofInputs>(nullptr);
  }

  ProofInputs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProofInputs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProofInputs& from);
  void MergeFrom(const ProofInputs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProofInputs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prover_proto.JoinsplitInput js_inputs = 2;
  int js_inputs_size() const;
  void clear_js_inputs();
  static const int kJsInputsFieldNumber = 2;
  ::prover_proto::JoinsplitInput* mutable_js_inputs(int index);
  ::google::protobuf::RepeatedPtrField< ::prover_proto::JoinsplitInput >*
      mutable_js_inputs();
  const ::prover_proto::JoinsplitInput& js_inputs(int index) const;
  ::prover_proto::JoinsplitInput* add_js_inputs();
  const ::google::protobuf::RepeatedPtrField< ::prover_proto::JoinsplitInput >&
      js_inputs() const;

  // repeated .prover_proto.ZethNote js_outputs = 3;
  int js_outputs_size() const;
  void clear_js_outputs();
  static const int kJsOutputsFieldNumber = 3;
  ::prover_proto::ZethNote* mutable_js_outputs(int index);
  ::google::protobuf::RepeatedPtrField< ::prover_proto::ZethNote >*
      mutable_js_outputs();
  const ::prover_proto::ZethNote& js_outputs(int index) const;
  ::prover_proto::ZethNote* add_js_outputs();
  const ::google::protobuf::RepeatedPtrField< ::prover_proto::ZethNote >&
      js_outputs() const;

  // string mk_root = 1;
  void clear_mk_root();
  static const int kMkRootFieldNumber = 1;
  const ::std::string& mk_root() const;
  void set_mk_root(const ::std::string& value);
  #if LANG_CXX11
  void set_mk_root(::std::string&& value);
  #endif
  void set_mk_root(const char* value);
  void set_mk_root(const char* value, size_t size);
  ::std::string* mutable_mk_root();
  ::std::string* release_mk_root();
  void set_allocated_mk_root(::std::string* mk_root);

  // string pub_in_value = 4;
  void clear_pub_in_value();
  static const int kPubInValueFieldNumber = 4;
  const ::std::string& pub_in_value() const;
  void set_pub_in_value(const ::std::string& value);
  #if LANG_CXX11
  void set_pub_in_value(::std::string&& value);
  #endif
  void set_pub_in_value(const char* value);
  void set_pub_in_value(const char* value, size_t size);
  ::std::string* mutable_pub_in_value();
  ::std::string* release_pub_in_value();
  void set_allocated_pub_in_value(::std::string* pub_in_value);

  // string pub_out_value = 5;
  void clear_pub_out_value();
  static const int kPubOutValueFieldNumber = 5;
  const ::std::string& pub_out_value() const;
  void set_pub_out_value(const ::std::string& value);
  #if LANG_CXX11
  void set_pub_out_value(::std::string&& value);
  #endif
  void set_pub_out_value(const char* value);
  void set_pub_out_value(const char* value, size_t size);
  ::std::string* mutable_pub_out_value();
  ::std::string* release_pub_out_value();
  void set_allocated_pub_out_value(::std::string* pub_out_value);

  // string h_sig = 6;
  void clear_h_sig();
  static const int kHSigFieldNumber = 6;
  const ::std::string& h_sig() const;
  void set_h_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_h_sig(::std::string&& value);
  #endif
  void set_h_sig(const char* value);
  void set_h_sig(const char* value, size_t size);
  ::std::string* mutable_h_sig();
  ::std::string* release_h_sig();
  void set_allocated_h_sig(::std::string* h_sig);

  // string phi = 7;
  void clear_phi();
  static const int kPhiFieldNumber = 7;
  const ::std::string& phi() const;
  void set_phi(const ::std::string& value);
  #if LANG_CXX11
  void set_phi(::std::string&& value);
  #endif
  void set_phi(const char* value);
  void set_phi(const char* value, size_t size);
  ::std::string* mutable_phi();
  ::std::string* release_phi();
  void set_allocated_phi(::std::string* phi);

  // @@protoc_insertion_point(class_scope:prover_proto.ProofInputs)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prover_proto::JoinsplitInput > js_inputs_;
  ::google::protobuf::RepeatedPtrField< ::prover_proto::ZethNote > js_outputs_;
  ::google::protobuf::internal::ArenaStringPtr mk_root_;
  ::google::protobuf::internal::ArenaStringPtr pub_in_value_;
  ::google::protobuf::internal::ArenaStringPtr pub_out_value_;
  ::google::protobuf::internal::ArenaStringPtr h_sig_;
  ::google::protobuf::internal::ArenaStringPtr phi_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_api_2fprover_2eproto;
};
// -------------------------------------------------------------------

class VerificationKey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prover_proto.VerificationKey) */ {
 public:
  VerificationKey();
  virtual ~VerificationKey();

  VerificationKey(const VerificationKey& from);

  inline VerificationKey& operator=(const VerificationKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VerificationKey(VerificationKey&& from) noexcept
    : VerificationKey() {
    *this = ::std::move(from);
  }

  inline VerificationKey& operator=(VerificationKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VerificationKey& default_instance();

  enum VKCase {
    kPghr13VerificationKey = 1,
    kGroth16VerificationKey = 2,
    VK_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VerificationKey* internal_default_instance() {
    return reinterpret_cast<const VerificationKey*>(
               &_VerificationKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VerificationKey* other);
  friend void swap(VerificationKey& a, VerificationKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VerificationKey* New() const final {
    return CreateMaybeMessage<VerificationKey>(nullptr);
  }

  VerificationKey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VerificationKey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VerificationKey& from);
  void MergeFrom(const VerificationKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VerificationKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
  bool has_pghr13_verification_key() const;
  void clear_pghr13_verification_key();
  static const int kPghr13VerificationKeyFieldNumber = 1;
  const ::prover_proto::VerificationKeyPGHR13& pghr13_verification_key() const;
  ::prover_proto::VerificationKeyPGHR13* release_pghr13_verification_key();
  ::prover_proto::VerificationKeyPGHR13* mutable_pghr13_verification_key();
  void set_allocated_pghr13_verification_key(::prover_proto::VerificationKeyPGHR13* pghr13_verification_key);

  // .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
  bool has_groth16_verification_key() const;
  void clear_groth16_verification_key();
  static const int kGroth16VerificationKeyFieldNumber = 2;
  const ::prover_proto::VerificationKeyGROTH16& groth16_verification_key() const;
  ::prover_proto::VerificationKeyGROTH16* release_groth16_verification_key();
  ::prover_proto::VerificationKeyGROTH16* mutable_groth16_verification_key();
  void set_allocated_groth16_verification_key(::prover_proto::VerificationKeyGROTH16* groth16_verification_key);

  void clear_VK();
  VKCase VK_case() const;
  // @@protoc_insertion_point(class_scope:prover_proto.VerificationKey)
 private:
  class HasBitSetters;
  void set_has_pghr13_verification_key();
  void set_has_groth16_verification_key();

  inline bool has_VK() const;
  inline void clear_has_VK();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union VKUnion {
    VKUnion() {}
    ::prover_proto::VerificationKeyPGHR13* pghr13_verification_key_;
    ::prover_proto::VerificationKeyGROTH16* groth16_verification_key_;
  } VK_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_api_2fprover_2eproto;
};
// -------------------------------------------------------------------

class ExtendedProof final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prover_proto.ExtendedProof) */ {
 public:
  ExtendedProof();
  virtual ~ExtendedProof();

  ExtendedProof(const ExtendedProof& from);

  inline ExtendedProof& operator=(const ExtendedProof& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtendedProof(ExtendedProof&& from) noexcept
    : ExtendedProof() {
    *this = ::std::move(from);
  }

  inline ExtendedProof& operator=(ExtendedProof&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExtendedProof& default_instance();

  enum EPCase {
    kPghr13ExtendedProof = 1,
    kGroth16ExtendedProof = 2,
    EP_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtendedProof* internal_default_instance() {
    return reinterpret_cast<const ExtendedProof*>(
               &_ExtendedProof_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ExtendedProof* other);
  friend void swap(ExtendedProof& a, ExtendedProof& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtendedProof* New() const final {
    return CreateMaybeMessage<ExtendedProof>(nullptr);
  }

  ExtendedProof* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtendedProof>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtendedProof& from);
  void MergeFrom(const ExtendedProof& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtendedProof* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
  bool has_pghr13_extended_proof() const;
  void clear_pghr13_extended_proof();
  static const int kPghr13ExtendedProofFieldNumber = 1;
  const ::prover_proto::ExtendedProofPGHR13& pghr13_extended_proof() const;
  ::prover_proto::ExtendedProofPGHR13* release_pghr13_extended_proof();
  ::prover_proto::ExtendedProofPGHR13* mutable_pghr13_extended_proof();
  void set_allocated_pghr13_extended_proof(::prover_proto::ExtendedProofPGHR13* pghr13_extended_proof);

  // .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
  bool has_groth16_extended_proof() const;
  void clear_groth16_extended_proof();
  static const int kGroth16ExtendedProofFieldNumber = 2;
  const ::prover_proto::ExtendedProofGROTH16& groth16_extended_proof() const;
  ::prover_proto::ExtendedProofGROTH16* release_groth16_extended_proof();
  ::prover_proto::ExtendedProofGROTH16* mutable_groth16_extended_proof();
  void set_allocated_groth16_extended_proof(::prover_proto::ExtendedProofGROTH16* groth16_extended_proof);

  void clear_EP();
  EPCase EP_case() const;
  // @@protoc_insertion_point(class_scope:prover_proto.ExtendedProof)
 private:
  class HasBitSetters;
  void set_has_pghr13_extended_proof();
  void set_has_groth16_extended_proof();

  inline bool has_EP() const;
  inline void clear_has_EP();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EPUnion {
    EPUnion() {}
    ::prover_proto::ExtendedProofPGHR13* pghr13_extended_proof_;
    ::prover_proto::ExtendedProofGROTH16* groth16_extended_proof_;
  } EP_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_api_2fprover_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProofInputs

// string mk_root = 1;
inline void ProofInputs::clear_mk_root() {
  mk_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProofInputs::mk_root() const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.mk_root)
  return mk_root_.GetNoArena();
}
inline void ProofInputs::set_mk_root(const ::std::string& value) {
  
  mk_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prover_proto.ProofInputs.mk_root)
}
#if LANG_CXX11
inline void ProofInputs::set_mk_root(::std::string&& value) {
  
  mk_root_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prover_proto.ProofInputs.mk_root)
}
#endif
inline void ProofInputs::set_mk_root(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mk_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prover_proto.ProofInputs.mk_root)
}
inline void ProofInputs::set_mk_root(const char* value, size_t size) {
  
  mk_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prover_proto.ProofInputs.mk_root)
}
inline ::std::string* ProofInputs::mutable_mk_root() {
  
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.mk_root)
  return mk_root_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProofInputs::release_mk_root() {
  // @@protoc_insertion_point(field_release:prover_proto.ProofInputs.mk_root)
  
  return mk_root_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProofInputs::set_allocated_mk_root(::std::string* mk_root) {
  if (mk_root != nullptr) {
    
  } else {
    
  }
  mk_root_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mk_root);
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ProofInputs.mk_root)
}

// repeated .prover_proto.JoinsplitInput js_inputs = 2;
inline int ProofInputs::js_inputs_size() const {
  return js_inputs_.size();
}
inline ::prover_proto::JoinsplitInput* ProofInputs::mutable_js_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.js_inputs)
  return js_inputs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prover_proto::JoinsplitInput >*
ProofInputs::mutable_js_inputs() {
  // @@protoc_insertion_point(field_mutable_list:prover_proto.ProofInputs.js_inputs)
  return &js_inputs_;
}
inline const ::prover_proto::JoinsplitInput& ProofInputs::js_inputs(int index) const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.js_inputs)
  return js_inputs_.Get(index);
}
inline ::prover_proto::JoinsplitInput* ProofInputs::add_js_inputs() {
  // @@protoc_insertion_point(field_add:prover_proto.ProofInputs.js_inputs)
  return js_inputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prover_proto::JoinsplitInput >&
ProofInputs::js_inputs() const {
  // @@protoc_insertion_point(field_list:prover_proto.ProofInputs.js_inputs)
  return js_inputs_;
}

// repeated .prover_proto.ZethNote js_outputs = 3;
inline int ProofInputs::js_outputs_size() const {
  return js_outputs_.size();
}
inline ::prover_proto::ZethNote* ProofInputs::mutable_js_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.js_outputs)
  return js_outputs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::prover_proto::ZethNote >*
ProofInputs::mutable_js_outputs() {
  // @@protoc_insertion_point(field_mutable_list:prover_proto.ProofInputs.js_outputs)
  return &js_outputs_;
}
inline const ::prover_proto::ZethNote& ProofInputs::js_outputs(int index) const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.js_outputs)
  return js_outputs_.Get(index);
}
inline ::prover_proto::ZethNote* ProofInputs::add_js_outputs() {
  // @@protoc_insertion_point(field_add:prover_proto.ProofInputs.js_outputs)
  return js_outputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::prover_proto::ZethNote >&
ProofInputs::js_outputs() const {
  // @@protoc_insertion_point(field_list:prover_proto.ProofInputs.js_outputs)
  return js_outputs_;
}

// string pub_in_value = 4;
inline void ProofInputs::clear_pub_in_value() {
  pub_in_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProofInputs::pub_in_value() const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.pub_in_value)
  return pub_in_value_.GetNoArena();
}
inline void ProofInputs::set_pub_in_value(const ::std::string& value) {
  
  pub_in_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prover_proto.ProofInputs.pub_in_value)
}
#if LANG_CXX11
inline void ProofInputs::set_pub_in_value(::std::string&& value) {
  
  pub_in_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prover_proto.ProofInputs.pub_in_value)
}
#endif
inline void ProofInputs::set_pub_in_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pub_in_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prover_proto.ProofInputs.pub_in_value)
}
inline void ProofInputs::set_pub_in_value(const char* value, size_t size) {
  
  pub_in_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prover_proto.ProofInputs.pub_in_value)
}
inline ::std::string* ProofInputs::mutable_pub_in_value() {
  
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.pub_in_value)
  return pub_in_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProofInputs::release_pub_in_value() {
  // @@protoc_insertion_point(field_release:prover_proto.ProofInputs.pub_in_value)
  
  return pub_in_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProofInputs::set_allocated_pub_in_value(::std::string* pub_in_value) {
  if (pub_in_value != nullptr) {
    
  } else {
    
  }
  pub_in_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pub_in_value);
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ProofInputs.pub_in_value)
}

// string pub_out_value = 5;
inline void ProofInputs::clear_pub_out_value() {
  pub_out_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProofInputs::pub_out_value() const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.pub_out_value)
  return pub_out_value_.GetNoArena();
}
inline void ProofInputs::set_pub_out_value(const ::std::string& value) {
  
  pub_out_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prover_proto.ProofInputs.pub_out_value)
}
#if LANG_CXX11
inline void ProofInputs::set_pub_out_value(::std::string&& value) {
  
  pub_out_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prover_proto.ProofInputs.pub_out_value)
}
#endif
inline void ProofInputs::set_pub_out_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pub_out_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prover_proto.ProofInputs.pub_out_value)
}
inline void ProofInputs::set_pub_out_value(const char* value, size_t size) {
  
  pub_out_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prover_proto.ProofInputs.pub_out_value)
}
inline ::std::string* ProofInputs::mutable_pub_out_value() {
  
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.pub_out_value)
  return pub_out_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProofInputs::release_pub_out_value() {
  // @@protoc_insertion_point(field_release:prover_proto.ProofInputs.pub_out_value)
  
  return pub_out_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProofInputs::set_allocated_pub_out_value(::std::string* pub_out_value) {
  if (pub_out_value != nullptr) {
    
  } else {
    
  }
  pub_out_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pub_out_value);
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ProofInputs.pub_out_value)
}

// string h_sig = 6;
inline void ProofInputs::clear_h_sig() {
  h_sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProofInputs::h_sig() const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.h_sig)
  return h_sig_.GetNoArena();
}
inline void ProofInputs::set_h_sig(const ::std::string& value) {
  
  h_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prover_proto.ProofInputs.h_sig)
}
#if LANG_CXX11
inline void ProofInputs::set_h_sig(::std::string&& value) {
  
  h_sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prover_proto.ProofInputs.h_sig)
}
#endif
inline void ProofInputs::set_h_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  h_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prover_proto.ProofInputs.h_sig)
}
inline void ProofInputs::set_h_sig(const char* value, size_t size) {
  
  h_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prover_proto.ProofInputs.h_sig)
}
inline ::std::string* ProofInputs::mutable_h_sig() {
  
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.h_sig)
  return h_sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProofInputs::release_h_sig() {
  // @@protoc_insertion_point(field_release:prover_proto.ProofInputs.h_sig)
  
  return h_sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProofInputs::set_allocated_h_sig(::std::string* h_sig) {
  if (h_sig != nullptr) {
    
  } else {
    
  }
  h_sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), h_sig);
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ProofInputs.h_sig)
}

// string phi = 7;
inline void ProofInputs::clear_phi() {
  phi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProofInputs::phi() const {
  // @@protoc_insertion_point(field_get:prover_proto.ProofInputs.phi)
  return phi_.GetNoArena();
}
inline void ProofInputs::set_phi(const ::std::string& value) {
  
  phi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prover_proto.ProofInputs.phi)
}
#if LANG_CXX11
inline void ProofInputs::set_phi(::std::string&& value) {
  
  phi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prover_proto.ProofInputs.phi)
}
#endif
inline void ProofInputs::set_phi(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prover_proto.ProofInputs.phi)
}
inline void ProofInputs::set_phi(const char* value, size_t size) {
  
  phi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prover_proto.ProofInputs.phi)
}
inline ::std::string* ProofInputs::mutable_phi() {
  
  // @@protoc_insertion_point(field_mutable:prover_proto.ProofInputs.phi)
  return phi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProofInputs::release_phi() {
  // @@protoc_insertion_point(field_release:prover_proto.ProofInputs.phi)
  
  return phi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProofInputs::set_allocated_phi(::std::string* phi) {
  if (phi != nullptr) {
    
  } else {
    
  }
  phi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phi);
  // @@protoc_insertion_point(field_set_allocated:prover_proto.ProofInputs.phi)
}

// -------------------------------------------------------------------

// VerificationKey

// .prover_proto.VerificationKeyPGHR13 pghr13_verification_key = 1;
inline bool VerificationKey::has_pghr13_verification_key() const {
  return VK_case() == kPghr13VerificationKey;
}
inline void VerificationKey::set_has_pghr13_verification_key() {
  _oneof_case_[0] = kPghr13VerificationKey;
}
inline ::prover_proto::VerificationKeyPGHR13* VerificationKey::release_pghr13_verification_key() {
  // @@protoc_insertion_point(field_release:prover_proto.VerificationKey.pghr13_verification_key)
  if (has_pghr13_verification_key()) {
    clear_has_VK();
      ::prover_proto::VerificationKeyPGHR13* temp = VK_.pghr13_verification_key_;
    VK_.pghr13_verification_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::prover_proto::VerificationKeyPGHR13& VerificationKey::pghr13_verification_key() const {
  // @@protoc_insertion_point(field_get:prover_proto.VerificationKey.pghr13_verification_key)
  return has_pghr13_verification_key()
      ? *VK_.pghr13_verification_key_
      : *reinterpret_cast< ::prover_proto::VerificationKeyPGHR13*>(&::prover_proto::_VerificationKeyPGHR13_default_instance_);
}
inline ::prover_proto::VerificationKeyPGHR13* VerificationKey::mutable_pghr13_verification_key() {
  if (!has_pghr13_verification_key()) {
    clear_VK();
    set_has_pghr13_verification_key();
    VK_.pghr13_verification_key_ = CreateMaybeMessage< ::prover_proto::VerificationKeyPGHR13 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:prover_proto.VerificationKey.pghr13_verification_key)
  return VK_.pghr13_verification_key_;
}

// .prover_proto.VerificationKeyGROTH16 groth16_verification_key = 2;
inline bool VerificationKey::has_groth16_verification_key() const {
  return VK_case() == kGroth16VerificationKey;
}
inline void VerificationKey::set_has_groth16_verification_key() {
  _oneof_case_[0] = kGroth16VerificationKey;
}
inline ::prover_proto::VerificationKeyGROTH16* VerificationKey::release_groth16_verification_key() {
  // @@protoc_insertion_point(field_release:prover_proto.VerificationKey.groth16_verification_key)
  if (has_groth16_verification_key()) {
    clear_has_VK();
      ::prover_proto::VerificationKeyGROTH16* temp = VK_.groth16_verification_key_;
    VK_.groth16_verification_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::prover_proto::VerificationKeyGROTH16& VerificationKey::groth16_verification_key() const {
  // @@protoc_insertion_point(field_get:prover_proto.VerificationKey.groth16_verification_key)
  return has_groth16_verification_key()
      ? *VK_.groth16_verification_key_
      : *reinterpret_cast< ::prover_proto::VerificationKeyGROTH16*>(&::prover_proto::_VerificationKeyGROTH16_default_instance_);
}
inline ::prover_proto::VerificationKeyGROTH16* VerificationKey::mutable_groth16_verification_key() {
  if (!has_groth16_verification_key()) {
    clear_VK();
    set_has_groth16_verification_key();
    VK_.groth16_verification_key_ = CreateMaybeMessage< ::prover_proto::VerificationKeyGROTH16 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:prover_proto.VerificationKey.groth16_verification_key)
  return VK_.groth16_verification_key_;
}

inline bool VerificationKey::has_VK() const {
  return VK_case() != VK_NOT_SET;
}
inline void VerificationKey::clear_has_VK() {
  _oneof_case_[0] = VK_NOT_SET;
}
inline VerificationKey::VKCase VerificationKey::VK_case() const {
  return VerificationKey::VKCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExtendedProof

// .prover_proto.ExtendedProofPGHR13 pghr13_extended_proof = 1;
inline bool ExtendedProof::has_pghr13_extended_proof() const {
  return EP_case() == kPghr13ExtendedProof;
}
inline void ExtendedProof::set_has_pghr13_extended_proof() {
  _oneof_case_[0] = kPghr13ExtendedProof;
}
inline ::prover_proto::ExtendedProofPGHR13* ExtendedProof::release_pghr13_extended_proof() {
  // @@protoc_insertion_point(field_release:prover_proto.ExtendedProof.pghr13_extended_proof)
  if (has_pghr13_extended_proof()) {
    clear_has_EP();
      ::prover_proto::ExtendedProofPGHR13* temp = EP_.pghr13_extended_proof_;
    EP_.pghr13_extended_proof_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::prover_proto::ExtendedProofPGHR13& ExtendedProof::pghr13_extended_proof() const {
  // @@protoc_insertion_point(field_get:prover_proto.ExtendedProof.pghr13_extended_proof)
  return has_pghr13_extended_proof()
      ? *EP_.pghr13_extended_proof_
      : *reinterpret_cast< ::prover_proto::ExtendedProofPGHR13*>(&::prover_proto::_ExtendedProofPGHR13_default_instance_);
}
inline ::prover_proto::ExtendedProofPGHR13* ExtendedProof::mutable_pghr13_extended_proof() {
  if (!has_pghr13_extended_proof()) {
    clear_EP();
    set_has_pghr13_extended_proof();
    EP_.pghr13_extended_proof_ = CreateMaybeMessage< ::prover_proto::ExtendedProofPGHR13 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:prover_proto.ExtendedProof.pghr13_extended_proof)
  return EP_.pghr13_extended_proof_;
}

// .prover_proto.ExtendedProofGROTH16 groth16_extended_proof = 2;
inline bool ExtendedProof::has_groth16_extended_proof() const {
  return EP_case() == kGroth16ExtendedProof;
}
inline void ExtendedProof::set_has_groth16_extended_proof() {
  _oneof_case_[0] = kGroth16ExtendedProof;
}
inline ::prover_proto::ExtendedProofGROTH16* ExtendedProof::release_groth16_extended_proof() {
  // @@protoc_insertion_point(field_release:prover_proto.ExtendedProof.groth16_extended_proof)
  if (has_groth16_extended_proof()) {
    clear_has_EP();
      ::prover_proto::ExtendedProofGROTH16* temp = EP_.groth16_extended_proof_;
    EP_.groth16_extended_proof_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::prover_proto::ExtendedProofGROTH16& ExtendedProof::groth16_extended_proof() const {
  // @@protoc_insertion_point(field_get:prover_proto.ExtendedProof.groth16_extended_proof)
  return has_groth16_extended_proof()
      ? *EP_.groth16_extended_proof_
      : *reinterpret_cast< ::prover_proto::ExtendedProofGROTH16*>(&::prover_proto::_ExtendedProofGROTH16_default_instance_);
}
inline ::prover_proto::ExtendedProofGROTH16* ExtendedProof::mutable_groth16_extended_proof() {
  if (!has_groth16_extended_proof()) {
    clear_EP();
    set_has_groth16_extended_proof();
    EP_.groth16_extended_proof_ = CreateMaybeMessage< ::prover_proto::ExtendedProofGROTH16 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:prover_proto.ExtendedProof.groth16_extended_proof)
  return EP_.groth16_extended_proof_;
}

inline bool ExtendedProof::has_EP() const {
  return EP_case() != EP_NOT_SET;
}
inline void ExtendedProof::clear_has_EP() {
  _oneof_case_[0] = EP_NOT_SET;
}
inline ExtendedProof::EPCase ExtendedProof::EP_case() const {
  return ExtendedProof::EPCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prover_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_api_2fprover_2eproto
